{"version":3,"sources":["components/Counter.jsx","components/Say.jsx","components/EventPractice.jsx","components/IterationSample.jsx","components/VendingMachine.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","number","setNumber","className","onClick","Say","message","setMessage","color","background","style","setStyle","handleStyle","newStyle","redStyle","fontSize","fontStyle","transition","blueStyle","greenStyle","EventPractice","username","message2","form","setForm","handleChange","e","target","name","value","handleClick","alert","class","placeholder","type","onChange","onKeyPress","console","log","key","IterationSample","id","text","names","setNames","inputStr","setInputStr","nextId","setNextId","test","prev","map","onDoubleClick","newNames","filter","i","handleDelete","VendingMachine","currentCoin","setCurrentCoin","price","drink","setDrink","display","marginRight","window","confirm","buy","marginLeft","setDrinkList","drinkList","deleteDringk","coins","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAiBeA,EAfC,WACd,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAKA,OACE,qCACA,oBAAIC,UAAU,SAAd,qBACE,6BAAKF,IACL,wBAAQG,QAPQ,WAClBF,EAAUD,EAAS,IAMjB,oB,OCyDSI,EAnEH,WACV,MAA8BL,mBAAS,sBAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAA0BP,mBAAS,SAAnC,mBACA,GADA,UAC0BA,mBAAS,CAAEQ,MAAO,QAASC,WAAY,WAAjE,mBAAOC,EAAP,KAAcC,EAAd,KAWMC,EAAc,SAACC,GACnBF,EAAS,2BAAKD,GAAUG,KAGpBC,EAAW,CACfN,MAAO,MACPO,SAAU,OACVC,UAAW,SACXC,WAAY,YAERC,EAAY,CAChBV,MAAO,OACPO,SAAU,OACVC,UAAW,SACXC,WAAY,YAERE,EAAa,CACjBX,MAAO,QACPO,SAAU,OACVE,WAAY,YAGd,OACE,mCACE,gCACE,wBAAQb,QAnCM,WAClBG,EAAW,mCAkCP,0BACA,wBAAQH,QAjCM,WAClBG,EAAW,0CAgCP,0BACA,oBAAIG,MAAOA,EAAX,SAAmBJ,IACnB,gCACE,wBACEI,MAAO,CAAEF,MAAO,OAChBJ,QAAS,kBAAMQ,EAAYE,IAF7B,gCAMA,wBACEJ,MAAO,CAAEF,MAAO,QAChBJ,QAAS,kBAAMQ,EAAYM,IAF7B,gCAMA,wBACER,MAAO,CAAEF,MAAO,SAChBJ,QAAS,kBAAMQ,EAAYO,IAF7B,yC,OCDKC,EAvDO,WACpB,MAA8BpB,mBAAS,IAAvC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBAEA,GAFA,UAEwBA,mBAAS,CAAEqB,SAAU,GAAIf,QAAS,GAAIgB,SAAU,MAAxE,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdL,EAAQ,2BAAKD,GAAN,kBAAaK,EAAOC,MAGvBC,EAAc,WAClB,IAAQT,EAAgCE,EAAhCF,SAAUf,EAAsBiB,EAAtBjB,QAASgB,EAAaC,EAAbD,SAC3BS,MAAM,GAAD,OAAIV,EAAJ,YAAgBf,EAAhB,YAA2BgB,IAChCE,EAAQ,CAAEH,SAAU,GAAIf,QAAS,GAAIgB,SAAU,MAQjD,OACE,qCACE,oBAAIU,MAAM,SAAV,2BACA,uBACEJ,KAAK,WACLC,MAAON,EAAKF,SACZY,YAAY,WACZC,KAAK,OACLC,SAAUV,IAGZ,uBACEG,KAAK,UACLC,MAAON,EAAKjB,QACZ2B,YAAY,UACZC,KAAK,OACLC,SAAUV,IAEZ,uBACEG,KAAK,WACLC,MAAON,EAAKD,SACZW,YAAY,WACZC,KAAK,OACLC,SAAUV,EACVW,WA9BiB,SAACV,GACtBW,QAAQC,IAAIZ,EAAEa,KACA,UAAVb,EAAEa,KACJT,OA8BA,wBAAQ1B,QAAS0B,EAAjB,8B,OCFSU,EA/CS,WACtB,MAA0BxC,mBAAS,CACjC,CAAEyC,GAAI,EAAGC,KAAM,sBACf,CAAED,GAAI,EAAGC,KAAM,gBACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,kBAJjB,mBAAOC,EAAP,KAAcC,EAAd,KASA,EAAgC5C,mBAAS,IAAzC,mBAAO6C,EAAP,KAAiBC,EAAjB,KACA,EAA4B9C,mBAAS,GAArC,mBAAO+C,EAAP,KAAeC,EAAf,KAqBA,OACE,qCACE,oBAAI7C,UAAU,SAAd,6BACA,uBAAO0B,MAAOgB,EAAUV,SAvBF,SAACT,GACzBoB,EAAYpB,EAAEC,OAAOE,QAsBkCK,KAAK,SAC1D,wBAAQ9B,QArBK,WAGE,kBACJ6C,KAAKJ,IAChBD,GAAS,SAACM,GAAD,OAAW,CAAET,GAAIM,EAAQL,KAAMG,IAA/B,mBAA8CK,OACvDF,EAAUD,EAAS,GACnBD,EAAY,KAEZf,MAAM,4DAYN,0BACA,6BACGY,EAAMQ,KAAI,gBAAGV,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,qBAAaU,cAAe,kBAZf,SAACX,GACpB,IAAMY,EAAWV,EAAMW,QAAO,SAAC1B,EAAM2B,GAAP,OAAa3B,EAAKa,KAAOA,KACvDG,EAASS,GAU+BG,CAAaf,IAA/C,UACGA,EADH,IACQC,EADR,sBACiB,yCADRD,YCcJgB,EArDQ,WACrB,MAAsCzD,mBAAS,GAA/C,mBAAO0D,EAAP,KAAoBC,EAApB,KAEA,EAA0B3D,mBAAS,CACjC,CAAEyC,GAAI,EAAGb,KAAM,SAAKgC,MAAO,KAC3B,CAAEnB,GAAI,EAAGb,KAAM,qBAAOgC,MAAO,KAC7B,CAAEnB,GAAI,EAAGb,KAAM,eAAMgC,MAAO,KAC5B,CAAEnB,GAAI,EAAGb,KAAM,qBAAOgC,MAAO,OAJ/B,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OACE,qCACE,oBAAI3D,UAAU,SAAd,4BACA,oBAAIO,MAAO,CAAEqD,QAAS,QAAtB,SACGF,EAAMV,KAAI,gBAAGV,EAAH,EAAGA,GAAIb,EAAP,EAAOA,KAAMgC,EAAb,EAAaA,MAAb,OACT,qBAAIlD,MAAO,CAAEsD,YAAa,QAA1B,UACE,yBAAiB5D,QAAS,kBAfxB,SAACwD,GACX,GAAKK,OAAOC,QAAQ,qDACpB,OAAIR,EAAcE,EAAc7B,MAAM,2DACtC4B,EAAeD,EAAcE,GAYWO,CAAIP,IAApC,UACGhC,EADH,IACUgC,EADV,WAAanB,GAGb,wBACE/B,MAAO,CAAE0D,WAAY,OACrBhE,QAAS,kBAfA,SAACqC,GACpB,IAAM4B,EAAeR,EAAMP,QAAO,SAACgB,EAAWf,GAAZ,OAAkBe,EAAU7B,KAAOA,KACrEqB,EAAS,YAAIO,IAaYE,CAAa9B,IAF9B,uBASN,4DAAWiB,KACX,8BAvCU,CAAC,IAAK,IAAK,IAAM,KAwClBP,KAAI,SAACqB,EAAOjB,GAAR,OACT,wBAAgBnD,QAAS,WAjC/BuD,EAAeD,EAiCiCc,IAA1C,SACGA,GADUjB,QAKjB,wBAAQnD,QApCI,kBAAMuD,EAAe,IAoCjC,uDClBSc,G,MAxBH,WAMV,OACE,qCAQE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAerE,QAhBI,WACrBiC,QAAQC,IAAI,aAgBV,cAAC,EAAD,IACA,cAAC,EAAD,SCfSoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e92c73c.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Counter = () => {\r\n  const [number, setNumber] = useState(0);\r\n  //console.log(number);\r\n  const handleClick = () => {\r\n    setNumber(number + 1);\r\n  };\r\n  return (\r\n    <>\r\n    <h1 className=\"h_text\">Counter</h1>\r\n      <h1>{number}</h1>\r\n      <button onClick={handleClick}>+1</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import { useState } from \"react\";\r\n\r\nconst Say = () => {\r\n  const [message, setMessage] = useState(\"초기값\");\r\n  const [color, setColor] = useState(\"black\");\r\n  const [style, setStyle] = useState({ color: \"white\", background: \"black\" });\r\n  const handleEnter = () => {\r\n    setMessage(\"안녕하세요\");\r\n  };\r\n  const handleLeave = () => {\r\n    setMessage(\"안녕히 가세요\");\r\n  };\r\n  const handleColor = (color) => {\r\n    if (color === \"red\") alert(\"빨강!\");\r\n    setColor(color);\r\n  };\r\n  const handleStyle = (newStyle) => {\r\n    setStyle({ ...style, ...newStyle });\r\n  };\r\n\r\n  const redStyle = {\r\n    color: \"red\",\r\n    fontSize: \"20px\",\r\n    fontStyle: \"italic\",\r\n    transition: \"all 0.3s\",\r\n  };\r\n  const blueStyle = {\r\n    color: \"blue\",\r\n    fontSize: \"10px\",\r\n    fontStyle: \"italic\",\r\n    transition: \"all 0.3s\",\r\n  };\r\n  const greenStyle = {\r\n    color: \"green\",\r\n    fontSize: \"30px\",\r\n    transition: \"all 0.3s\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <button onClick={handleEnter}>입장</button>\r\n        <button onClick={handleLeave}>퇴장</button>\r\n        <h1 style={style}>{message}</h1>\r\n        <div>\r\n          <button\r\n            style={{ color: \"red\" }}\r\n            onClick={() => handleStyle(redStyle)}\r\n          >\r\n            빨간색\r\n          </button>\r\n          <button\r\n            style={{ color: \"blue\" }}\r\n            onClick={() => handleStyle(blueStyle)}\r\n          >\r\n            파란색\r\n          </button>\r\n          <button\r\n            style={{ color: \"green\" }}\r\n            onClick={() => handleStyle(greenStyle)}\r\n          >\r\n            초록색\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Say;\r\n","import { useState } from \"react\";\r\nconst EventPractice = () => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const [form, setForm] = useState({ username: \"\", message: \"\", message2: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n  //const { username, message, message2 } = form;\r\n  const handleClick = () => {\r\n    const { username, message, message2 } = form;\r\n    alert(`${username}:${message}:${message2}`);\r\n    setForm({ username: \"\", message: \"\", message2: \"\" });\r\n  };\r\n  const handleKeyPress = (e) => {\r\n    console.log(e.key);\r\n    if (e.key === \"Enter\") {\r\n      handleClick();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1 class=\"h_text\">EventPractice</h1>\r\n      <input\r\n        name=\"username\"\r\n        value={form.username}\r\n        placeholder=\"username\"\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <input\r\n        name=\"message\"\r\n        value={form.message}\r\n        placeholder=\"message\"\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n      />\r\n      <input\r\n        name=\"message2\"\r\n        value={form.message2}\r\n        placeholder=\"message2\"\r\n        type=\"text\"\r\n        onChange={handleChange}\r\n        onKeyPress={handleKeyPress}\r\n      />\r\n\r\n      <button onClick={handleClick}>확인</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventPractice;\r\n","import { useState } from \"react\";\r\n\r\nconst IterationSample = () => {\r\n  const [names, setNames] = useState([\r\n    { id: 1, text: \"눈사람\" },\r\n    { id: 2, text: \"얼음\" },\r\n    { id: 3, text: \"눈\" },\r\n    { id: 4, text: \"바람\" },\r\n  ]);\r\n  //   const newArray = names.map((e, i) => {\r\n  //     return e + \"입니다.\";\r\n  //   });\r\n  const [inputStr, setInputStr] = useState(\"\");\r\n  const [nextId, setNextId] = useState(5);\r\n  const handleChangeInput = (e) => {\r\n    setInputStr(e.target.value);\r\n  };\r\n  const addNames = () => {\r\n    //const newNames = [inputStr, ...names];\r\n    //setNames([...newNames]);\r\n    const checkStr = /[가-힣]/;\r\n    if (checkStr.test(inputStr)) {\r\n      setNames((prev) => [{ id: nextId, text: inputStr }, ...prev]);\r\n      setNextId(nextId + 1);\r\n      setInputStr(\"\");\r\n    } else {\r\n      alert(\"한글만 입력해주세요\");\r\n    }\r\n  };\r\n  const handleDelete = (id) => {\r\n    const newNames = names.filter((name, i) => name.id !== id);\r\n    setNames(newNames);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"h_text\">IterationSample</h1>\r\n      <input value={inputStr} onChange={handleChangeInput} type=\"text\" />\r\n      <button onClick={addNames}>추가</button>\r\n      <ul>\r\n        {names.map(({ id, text }) => (\r\n          <li key={id} onDoubleClick={() => handleDelete(id)}>\r\n            {id}.{text}입니다.<button>X</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default IterationSample;\r\n","import { useState } from \"react\";\r\n\r\nconst VendingMachine = () => {\r\n  const [currentCoin, setCurrentCoin] = useState(0);\r\n  const coins = [100, 500, 1000, 5000];\r\n  const [drink, setDrink] = useState([\r\n    { id: 1, name: \"물\", price: 1000 },\r\n    { id: 2, name: \"사이다\", price: 2000 },\r\n    { id: 3, name: \"콜라\", price: 2000 },\r\n    { id: 4, name: \"컨디션\", price: 10000 },\r\n  ]);\r\n  const insertCoin = (coin) => {\r\n    setCurrentCoin(currentCoin + coin);\r\n  };\r\n  const setCoin = () => setCurrentCoin(0);\r\n  const buy = (price) => {\r\n    if (!window.confirm(\"구매하시겠습니까?\")) return;\r\n    if (currentCoin < price) return alert(\"코인이 부족합니다.\");\r\n    setCurrentCoin(currentCoin - price);\r\n  };\r\n  const deleteDringk = (id) => {\r\n    const setDrinkList = drink.filter((drinkList, i) => drinkList.id !== id);\r\n    setDrink([...setDrinkList]);\r\n  };\r\n  return (\r\n    <>\r\n      <h1 className=\"h_text\">VendingMachine</h1>\r\n      <ul style={{ display: \"flex\" }}>\r\n        {drink.map(({ id, name, price }) => (\r\n          <li style={{ marginRight: \"10px\" }}>\r\n            <button key={id} onClick={() => buy(price)}>\r\n              {name}:{price}원\r\n            </button>\r\n            <button\r\n              style={{ marginLeft: \"5px\" }}\r\n              onClick={() => deleteDringk(id)}\r\n            >\r\n              X\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h2>현재 코인:{currentCoin}</h2>\r\n      <div>\r\n        {coins.map((coins, i) => (\r\n          <button key={i} onClick={() => insertCoin(coins)}>\r\n            {coins}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button onClick={setCoin}>거스름돈 반환</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VendingMachine;\r\n","import MyComponent from \"./components/MyComponent\";\nimport Counter from \"./components/Counter\";\nimport Say from \"./components/Say\";\nimport EventPractice from \"./components/EventPractice\";\nimport IterationSample from \"./components/IterationSample\";\nimport VendingMachine from \"./components/VendingMachine\";\nimport \"./App.css\";\n\nconst App = () => {\n  const parentFunction = () => {\n    console.log(\"parent\");\n  };\n  const firName = \"전\";\n  const lastName = \"하민\";\n  return (\n    <>\n      {/* <MyComponent firName={firName} lastName={lastName}>\n        30\n      </MyComponent>\n\n      <MyComponent firName=\"Jeon\" lastName=\"Hamin\">\n        30\n      </MyComponent> */}\n      <Counter />\n      <Say />\n      <EventPractice onClick={parentFunction} />\n      <IterationSample />\n      <VendingMachine />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}